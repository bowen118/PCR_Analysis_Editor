{"ast":null,"code":"var _jsxFileName = \"/Users/bowenchen/Desktop/Projects/PCR_Analysis/Editor/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n} // class Board extends React.Component {\n//   renderSquare(i) {\n//     return (\n//       <Square \n//         value={this.props.squares[i]} \n//         onClick={() => this.props.onClick(i)}\n//       />\n//     );\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(0)}\n//           {this.renderSquare(1)}\n//           {this.renderSquare(2)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(3)}\n//           {this.renderSquare(4)}\n//           {this.renderSquare(5)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(6)}\n//           {this.renderSquare(7)}\n//           {this.renderSquare(8)}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// class Game extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       history: [{\n//         squares: Array(9).fill(null),\n//       }],\n//       stepNumber: 0,\n//       xIsNext: true,\n//     };\n//   }\n//   handleClick(i) {\n//     const history = this.state.history.slice(0, this.state.stepNumber + 1);\n//     const current = history[history.length - 1];\n//     const squares = current.squares.slice();\n//     if (calculateWinner(squares) || squares[i]) {\n//       return;\n//     }\n//     squares[i] = this.state.xIsNext ? 'X' : 'O';\n//     this.setState({\n//       history: history.concat([{\n//         squares: squares,\n//       }]),\n//       stepNumber: history.length,\n//       xIsNext: !this.state.xIsNext,\n//     });\n//   }\n//   jumpTo(step) {\n//     this.setState({\n//       stepNumber: step,\n//       xIsNext: (step % 2) === 0,\n//     });\n//   }\n//   render() {\n//     const history = this.state.history;\n//     const current = history[this.state.stepNumber];\n//     const winner = calculateWinner(current.squares);\n//     const moves = history.map((step, move) => {\n//       const desc = move ?\n//         'Go to move #' + move :\n//         'Go to game start';\n//       return (\n//         <li key={move}>\n//           <button onClick={() => this.jumpTo(move)}>{desc}</button>\n//         </li>\n//       );\n//     });\n//     let status;\n//     if (winner) {\n//       status = 'Winner: ' + winner;\n//     } else {\n//       status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n//     }\n//     return (\n//       <div className=\"game\">\n//         <div className=\"game-board\">\n//           <Board \n//             squares={current.squares}\n//             onClick={(i) => this.handleClick(i)}\n//           />\n//         </div>\n//         <div className=\"game-info\">\n//           <div>{status}</div>\n//           <ol>{moves}</ol>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// function calculateWinner(squares) {\n//   const lines = [\n//     [0, 1, 2],\n//     [3, 4, 5],\n//     [6, 7, 8],\n//     [0, 3, 6],\n//     [1, 4, 7],\n//     [2, 5, 8],\n//     [0, 4, 8],\n//     [2, 4, 6],\n//   ];\n//   for (let i = 0; i < lines.length; i++) {\n//     const [a, b, c] = lines[i];\n//     if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n//       return squares[a];\n//     }\n//   }\n//   return null;\n// }\n// ========================================\n\n\nclass Plate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rows: this.props.rows,\n      cols: this.props.cols,\n      // tempArray : Array(this.props.cols).fill(0),\n      platePattern: Array(this.props.rows).fill(null).map(() => Array(this.props.cols).fill(0).slice())\n    };\n  }\n\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const rows = this.state.platePattern.map((row, rowIndex) => {\n      var rowStart = rowIndex * this.state.platePattern[0].length;\n      var thisRow = row.map((well, colIndex) => {\n        return React.createElement(\"td\", {\n          key: colIndex,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, this.renderSquare(rowStart + colIndex + 1));\n      });\n      return React.createElement(\"tr\", {\n        key: rowIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, thisRow);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, rows));\n  }\n\n}\n\nclass Menu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rows: null,\n      cols: null\n    };\n  }\n\n  standardPlate() {\n    this.setState({\n      rows: 8,\n      cols: 12\n    });\n  }\n\n  largePlate() {\n    this.state.rows = 16;\n    this.state.rows = 24;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n      onClick: () => this.standardPlate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"96-Well Plate\"), React.createElement(\"button\", {\n      onClick: () => this.largePlate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"384-Well Plate\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Plate, {\n      rows: this.state.rows,\n      cols: this.state.cols,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })));\n  }\n\n}\n\nReactDOM.render(React.createElement(Menu, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 223\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/bowenchen/Desktop/Projects/PCR_Analysis/Editor/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","value","Plate","Component","constructor","state","rows","cols","platePattern","Array","fill","map","slice","renderSquare","i","render","row","rowIndex","rowStart","length","thisRow","well","colIndex","Menu","standardPlate","setState","largePlate","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\">\n      {props.value}\n    </button>\n  );\n}\n  \n// class Board extends React.Component {\n\n//   renderSquare(i) {\n//     return (\n//       <Square \n//         value={this.props.squares[i]} \n//         onClick={() => this.props.onClick(i)}\n//       />\n//     );\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(0)}\n//           {this.renderSquare(1)}\n//           {this.renderSquare(2)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(3)}\n//           {this.renderSquare(4)}\n//           {this.renderSquare(5)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(6)}\n//           {this.renderSquare(7)}\n//           {this.renderSquare(8)}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// class Game extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       history: [{\n//         squares: Array(9).fill(null),\n//       }],\n//       stepNumber: 0,\n//       xIsNext: true,\n//     };\n//   }\n\n//   handleClick(i) {\n//     const history = this.state.history.slice(0, this.state.stepNumber + 1);\n//     const current = history[history.length - 1];\n//     const squares = current.squares.slice();\n//     if (calculateWinner(squares) || squares[i]) {\n//       return;\n//     }\n//     squares[i] = this.state.xIsNext ? 'X' : 'O';\n//     this.setState({\n//       history: history.concat([{\n//         squares: squares,\n//       }]),\n//       stepNumber: history.length,\n//       xIsNext: !this.state.xIsNext,\n//     });\n//   }\n\n//   jumpTo(step) {\n//     this.setState({\n//       stepNumber: step,\n//       xIsNext: (step % 2) === 0,\n//     });\n//   }\n\n//   render() {\n//     const history = this.state.history;\n//     const current = history[this.state.stepNumber];\n//     const winner = calculateWinner(current.squares);\n\n//     const moves = history.map((step, move) => {\n//       const desc = move ?\n//         'Go to move #' + move :\n//         'Go to game start';\n//       return (\n//         <li key={move}>\n//           <button onClick={() => this.jumpTo(move)}>{desc}</button>\n//         </li>\n//       );\n//     });\n    \n//     let status;\n//     if (winner) {\n//       status = 'Winner: ' + winner;\n//     } else {\n//       status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n//     }\n\n//     return (\n//       <div className=\"game\">\n//         <div className=\"game-board\">\n//           <Board \n//             squares={current.squares}\n//             onClick={(i) => this.handleClick(i)}\n//           />\n//         </div>\n//         <div className=\"game-info\">\n//           <div>{status}</div>\n//           <ol>{moves}</ol>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// function calculateWinner(squares) {\n//   const lines = [\n//     [0, 1, 2],\n//     [3, 4, 5],\n//     [6, 7, 8],\n//     [0, 3, 6],\n//     [1, 4, 7],\n//     [2, 5, 8],\n//     [0, 4, 8],\n//     [2, 4, 6],\n//   ];\n//   for (let i = 0; i < lines.length; i++) {\n//     const [a, b, c] = lines[i];\n//     if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n//       return squares[a];\n//     }\n//   }\n//   return null;\n// }\n\n// ========================================\n\nclass Plate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rows: this.props.rows,\n      cols: this.props.cols,\n      // tempArray : Array(this.props.cols).fill(0),\n      platePattern: Array(this.props.rows).fill(null).map(() => Array(this.props.cols).fill(0).slice()),\n    };\n  }\n\n  renderSquare(i) {\n    return (\n      <Square \n        value={i} \n      />\n    );\n  }\n\n  render() {\n    const rows = this.state.platePattern.map((row, rowIndex) => {\n      var rowStart = rowIndex * this.state.platePattern[0].length;\n      var thisRow = row.map((well, colIndex) => {\n        return (\n          <td key={colIndex}>{this.renderSquare(rowStart + colIndex + 1)}</td>\n        );\n      })\n      return (\n        <tr key={rowIndex}>\n          {thisRow}\n        </tr>\n      );\n    });\n    return (\n      <div>\n        <table>\n          {rows}\n        </table>\n      </div>\n    );\n  }\n}\n\nclass Menu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rows: null,\n      cols: null,\n    };\n  }\n\n  standardPlate() {\n    this.setState({\n      rows: 8,\n      cols: 12,\n    });\n  }\n\n  largePlate() {\n    this.state.rows = 16;\n    this.state.rows = 24;\n  }\n\n  render() {\n    return (\n      <>\n      <button onClick={() => this.standardPlate()}>96-Well Plate</button>\n      <button onClick={() => this.largePlate()}>384-Well Plate</button>\n      <div>\n        <Plate rows={this.state.rows} cols={this.state.cols} />\n      </div>\n      </>\n    )\n  }\n}\n\nReactDOM.render(\n  <Menu />,\n  document.getElementById('root')\n);\n  \n  "]},"metadata":{},"sourceType":"module"}